{"version":3,"file":"static/js/317.831ea083.chunk.js","mappings":"oMAIe,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,GACCA,EAAKG,QAAQC,KAAI,SAAAC,GAAI,OACnB,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CAAEC,KAAMR,GAFjB,UAKE,eAAIS,UAAU,aAAd,SAA4BL,EAAKM,SAF5BN,EAAKE,GAJO,KAW5B,C,4HC8ED,EA3Fe,WAoCb,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAAoCP,EAAAA,EAAAA,UAAS,IAA7C,eAAOQ,EAAP,KAAmBC,EAAnB,KAMMC,GAAaC,EAAAA,EAAAA,cAAY,SAAAL,GAC7BM,MAAM,GAAD,OACAC,EAAAA,GADA,2EAC2EP,GAC9EQ,EAAAA,IAECC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTF,MAAK,SAAAC,GAAI,OAAId,EAAWc,EAAf,IACTE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,KAEHG,EAAAA,EAAAA,YAAU,WACJhB,GACFI,EAAWJ,EAEd,GAAE,CAACA,EAAOI,IAUX,OACE,iBAAKZ,UAAU,mBAAf,WACE,kBAAMyB,SAVgB,SAAAC,GAExB,GADAA,EAAIC,iBACe,KAAfjB,EACF,OAAOH,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOE,GAC1B,EAIG,WACE,kBACEkB,KAAK,OACLC,KAAK,QACLC,YAAY,eACZC,UAAQ,EACR/B,UAAU,cACVgC,MAAOtB,EACPuB,SAtCa,SAAAC,GACnBvB,EAAcuB,EAAMC,OAAOH,MAC5B,KAsCK,mBAAQJ,KAAK,SAAS5B,UAAU,aAAhC,uBAKDG,IAAW,SAACd,EAAA,EAAD,CAAMC,KAAMa,MAG7B,C,uGChGM,IACMY,EAAQ,6BACRqB,EAAO,8BAGPpB,EAAU,CACnBqB,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,8N","sources":["components/List/List.jsx","pages/Movies.jsx","utils/API.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport './List.css';\nimport PropTypes from 'prop-types';\n\nexport default function List({ list }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {list &&\n        list.results.map(film => (\n          <Link\n            to={`/movies/${film.id}`}\n            state={{ from: location }}\n            key={film.id}\n          >\n            <li className=\"movie_link\">{film.title}</li>\n          </Link>\n        ))}\n    </ul>\n  );\n}\n\nList.propTypes = {\n  list: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n  }),\n};\n\n\n\n","import { useCallback, useEffect, useState } from 'react';\nimport { BASE_URL, options } from 'utils/API';\nimport List from 'components/List/List';\n/* import history from 'history/browser'; */\nimport './Movies.css';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  /*     let params = new URLSearchParams(history.location.search)\n    let query = params.get('query')\n  const [search, setSearch] = useState(query ?? '');\n  const [data, setData] = useState('');\n\n  function handleSearch() {\n    history.push({search:`?query=${search}`})\n    fetch(\n      `${BASE_URL}/3/search/movie?include_adult=false&language=en-US&page=1&query=${search}`,\n      options\n    )\n      .then(data => data.json())\n      .then(data => setData(data));\n  }\n\n  useEffect(() => {\n    if(search) {\n        handleSearch()\n    }\n  }, [])\n\n  return (\n    <div className='movie_search_box'>\n      <input\n        type=\"text\"\n        value={search}\n        onChange={e => setSearch(e.target.value)}\n        className='movie_input'\n      />\n      <button onClick={handleSearch} className='search_btn'>Search</button>\n\n      <List list={data} />\n    </div>\n  ); */\n\n  const [movieId, setMovieId] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [searchText, setSearchText] = useState('');\n\n  const handleChange = event => {\n    setSearchText(event.target.value);\n  };\n\n  const grabMovies = useCallback(query => {\n    fetch(\n      `${BASE_URL}/3/search/movie?include_adult=false&language=en-US&page=1&query=${query}`,\n      options\n    )\n      .then(data => data.json())\n      .then(data => setMovieId(data))\n      .catch(error => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    if (query) {\n      grabMovies(query);\n    }\n  }, [query, grabMovies]);\n\n  const updateQueryString = evt => {\n    evt.preventDefault();\n    if (searchText === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: searchText });\n  };\n\n  return (\n    <div className=\"movie_search_box\">\n      <form onSubmit={updateQueryString}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search movie\"\n          required\n          className=\"movie_input\"\n          value={searchText}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className=\"search_btn\">\n          Search\n        </button>\n      </form>\n\n      {movieId && <List list={movieId} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","export const API_KEY = \"db1b05a4afe01aa6ff6e086eb0979269\";\nexport const BASE_URL = `https://api.themoviedb.org`\nexport const IMG_URl = `https://image.tmdb.org/t/p/`\n\n\nexport const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYjFiMDVhNGFmZTAxYWE2ZmY2ZTA4NmViMDk3OTI2OSIsInN1YiI6IjY0Y2E3MjAyMDAxYmJkMDEyNmE3YjUxNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.dOLh01iW7MndLtXhjFkTsC57CwOgOift1t6Z_EaUYwA'\n    }\n  };"],"names":["List","list","location","useLocation","results","map","film","to","id","state","from","className","title","useState","movieId","setMovieId","useSearchParams","searchParams","setSearchParams","query","get","searchText","setSearchText","grabMovies","useCallback","fetch","BASE_URL","options","then","data","json","catch","error","console","log","useEffect","onSubmit","evt","preventDefault","type","name","placeholder","required","value","onChange","event","target","IMG_URl","method","headers","accept","Authorization"],"sourceRoot":""}